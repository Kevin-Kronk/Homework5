[
  {
    "objectID": "Homework5.html",
    "href": "Homework5.html",
    "title": "Homework 5",
    "section": "",
    "text": "# Load libraries\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\n\nModify the code provided to read in the data from a local file source and combine the two data frames. Use local paths as they do in their code.\n\n# Code provided\nd1=read.table(\"student+performance/student/student-mat.csv\",sep=\";\",header=TRUE)\nd2=read.table(\"student+performance/student/student-por.csv\",sep=\";\",header=TRUE)\n\nd3=merge(d1,d2,by=c(\"school\",\"sex\",\"age\",\"address\",\"famsize\",\"Pstatus\",\"Medu\",\"Fedu\",\"Mjob\",\"Fjob\",\"reason\",\"nursery\",\"internet\"))\nprint(nrow(d3)) # 382 students\n\n[1] 382\n\n\nRead in and combine the data using functions from the tidyverse. Use an inner_join() on the variables they used in their code. Do you notice any issues? Make a note of the issue.\n\n# Load the data\nmath_data &lt;- read_csv2(\"student+performance/student/student-mat.csv\", \n                       col_names=TRUE)\n\nℹ Using \"','\" as decimal and \"'.'\" as grouping mark. Use `read_delim()` for more control.\n\n\nRows: 395 Columns: 33\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (17): school, sex, address, famsize, Pstatus, Mjob, Fjob, reason, guardi...\ndbl (16): age, Medu, Fedu, traveltime, studytime, failures, famrel, freetime...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nportuguese_data &lt;- read_csv2(\"student+performance/student/student-por.csv\",\n                             col_names=TRUE)\n\nℹ Using \"','\" as decimal and \"'.'\" as grouping mark. Use `read_delim()` for more control.\nRows: 649 Columns: 33── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (17): school, sex, address, famsize, Pstatus, Mjob, Fjob, reason, guardi...\ndbl (16): age, Medu, Fedu, traveltime, studytime, failures, famrel, freetime...\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# inner join\ncombined_data &lt;- inner_join(math_data, portuguese_data, \n                            by = c(\"school\",\"sex\",\"age\",\"address\",\n                                   \"famsize\",\"Pstatus\",\"Medu\",\"Fedu\",\n                                   \"Mjob\",\"Fjob\",\"reason\",\"nursery\",\"internet\"))\n\nWarning in inner_join(math_data, portuguese_data, by = c(\"school\", \"sex\", : Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 79 of `x` matches multiple rows in `y`.\nℹ Row 79 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\ncombined_data\n\n# A tibble: 382 × 53\n   school sex     age address famsize Pstatus  Medu  Fedu Mjob     Fjob   reason\n   &lt;chr&gt;  &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt;  &lt;chr&gt; \n 1 GP     F        18 U       GT3     A           4     4 at_home  teach… course\n 2 GP     F        17 U       GT3     T           1     1 at_home  other  course\n 3 GP     F        15 U       LE3     T           1     1 at_home  other  other \n 4 GP     F        15 U       GT3     T           4     2 health   servi… home  \n 5 GP     F        16 U       GT3     T           3     3 other    other  home  \n 6 GP     M        16 U       LE3     T           4     3 services other  reput…\n 7 GP     M        16 U       LE3     T           2     2 other    other  home  \n 8 GP     F        17 U       GT3     A           4     4 other    teach… home  \n 9 GP     M        15 U       LE3     A           3     2 services other  home  \n10 GP     M        15 U       GT3     T           3     4 other    other  home  \n# ℹ 372 more rows\n# ℹ 42 more variables: guardian.x &lt;chr&gt;, traveltime.x &lt;dbl&gt;, studytime.x &lt;dbl&gt;,\n#   failures.x &lt;dbl&gt;, schoolsup.x &lt;chr&gt;, famsup.x &lt;chr&gt;, paid.x &lt;chr&gt;,\n#   activities.x &lt;chr&gt;, nursery &lt;chr&gt;, higher.x &lt;chr&gt;, internet &lt;chr&gt;,\n#   romantic.x &lt;chr&gt;, famrel.x &lt;dbl&gt;, freetime.x &lt;dbl&gt;, goout.x &lt;dbl&gt;,\n#   Dalc.x &lt;dbl&gt;, Walc.x &lt;dbl&gt;, health.x &lt;dbl&gt;, absences.x &lt;dbl&gt;, G1.x &lt;dbl&gt;,\n#   G2.x &lt;dbl&gt;, G3.x &lt;dbl&gt;, guardian.y &lt;chr&gt;, traveltime.y &lt;dbl&gt;, …\n\n\nThere appears to be an unexpected many-to-many relationship between ‘x’ and ‘y’. Row 79 of ‘x’ matches multiple rows in ‘y’, and vice versa.\nUser an inner_join() on all variables other than G1, G2, G3, paid, and absences. Use this form of the combined data in further exercises.\n\n# inner join\ncombined_data &lt;- inner_join(math_data, portuguese_data, \n                            by = c(\"school\",\"sex\",\"age\",\"address\",\n                                   \"famsize\",\"Pstatus\",\"Medu\",\"Fedu\",\n                                   \"Mjob\",\"Fjob\",\"reason\",\n                                   \"guardian\", \"traveltime\",\"studytime\",\"failures\",\n                                   \"schoolsup\", \"famsup\", \"activities\", \"nursery\",\n                                   \"higher\", \"internet\", \"romantic\", \"famrel\",\n                                   \"freetime\", \"goout\", \"Dalc\", \"Walc\", \"health\"))\n\ncombined_data\n\n# A tibble: 320 × 38\n   school sex     age address famsize Pstatus  Medu  Fedu Mjob     Fjob   reason\n   &lt;chr&gt;  &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt;  &lt;chr&gt; \n 1 GP     F        18 U       GT3     A           4     4 at_home  teach… course\n 2 GP     F        17 U       GT3     T           1     1 at_home  other  course\n 3 GP     F        15 U       GT3     T           4     2 health   servi… home  \n 4 GP     F        16 U       GT3     T           3     3 other    other  home  \n 5 GP     M        16 U       LE3     T           4     3 services other  reput…\n 6 GP     M        16 U       LE3     T           2     2 other    other  home  \n 7 GP     F        17 U       GT3     A           4     4 other    teach… home  \n 8 GP     M        15 U       LE3     A           3     2 services other  home  \n 9 GP     M        15 U       GT3     T           3     4 other    other  home  \n10 GP     F        15 U       GT3     T           4     4 teacher  health reput…\n# ℹ 310 more rows\n# ℹ 27 more variables: guardian &lt;chr&gt;, traveltime &lt;dbl&gt;, studytime &lt;dbl&gt;,\n#   failures &lt;dbl&gt;, schoolsup &lt;chr&gt;, famsup &lt;chr&gt;, paid.x &lt;chr&gt;,\n#   activities &lt;chr&gt;, nursery &lt;chr&gt;, higher &lt;chr&gt;, internet &lt;chr&gt;,\n#   romantic &lt;chr&gt;, famrel &lt;dbl&gt;, freetime &lt;dbl&gt;, goout &lt;dbl&gt;, Dalc &lt;dbl&gt;,\n#   Walc &lt;dbl&gt;, health &lt;dbl&gt;, absences.x &lt;dbl&gt;, G1.x &lt;dbl&gt;, G2.x &lt;dbl&gt;,\n#   G3.x &lt;dbl&gt;, paid.y &lt;chr&gt;, absences.y &lt;dbl&gt;, G1.y &lt;dbl&gt;, G2.y &lt;dbl&gt;, …\n\n\nNext, for the math data, Portuguese, and combined data, choose four categorical variables you are interested in and convert those into factor variables in each tibble (use the same four in each). Use the mutate() function to accomplish this.\n\nmath_data &lt;- math_data |&gt;\n  mutate(school = as.factor(school),\n         sex = as.factor(sex),\n         internet = as.factor(internet),\n         activities = as.factor(activities))\n\nportuguese_data &lt;- portuguese_data |&gt;\n  mutate(school = as.factor(school),\n         sex = as.factor(sex),\n         internet = as.factor(internet),\n         activities = as.factor(activities))\n\ncombined_data &lt;- combined_data |&gt;\n  mutate(school = as.factor(school),\n         sex = as.factor(sex),\n         internet = as.factor(internet),\n         activities = as.factor(activities))\n\n\n\n\nLook at how the data is stored and see if everything makes sense.\n\nstr(combined_data)\n\ntibble [320 × 38] (S3: tbl_df/tbl/data.frame)\n $ school    : Factor w/ 2 levels \"GP\",\"MS\": 1 1 1 1 1 1 1 1 1 1 ...\n $ sex       : Factor w/ 2 levels \"F\",\"M\": 1 1 1 1 2 2 1 2 2 1 ...\n $ age       : num [1:320] 18 17 15 16 16 16 17 15 15 15 ...\n $ address   : chr [1:320] \"U\" \"U\" \"U\" \"U\" ...\n $ famsize   : chr [1:320] \"GT3\" \"GT3\" \"GT3\" \"GT3\" ...\n $ Pstatus   : chr [1:320] \"A\" \"T\" \"T\" \"T\" ...\n $ Medu      : num [1:320] 4 1 4 3 4 2 4 3 3 4 ...\n $ Fedu      : num [1:320] 4 1 2 3 3 2 4 2 4 4 ...\n $ Mjob      : chr [1:320] \"at_home\" \"at_home\" \"health\" \"other\" ...\n $ Fjob      : chr [1:320] \"teacher\" \"other\" \"services\" \"other\" ...\n $ reason    : chr [1:320] \"course\" \"course\" \"home\" \"home\" ...\n $ guardian  : chr [1:320] \"mother\" \"father\" \"mother\" \"father\" ...\n $ traveltime: num [1:320] 2 1 1 1 1 1 2 1 1 1 ...\n $ studytime : num [1:320] 2 2 3 2 2 2 2 2 2 2 ...\n $ failures  : num [1:320] 0 0 0 0 0 0 0 0 0 0 ...\n $ schoolsup : chr [1:320] \"yes\" \"no\" \"no\" \"no\" ...\n $ famsup    : chr [1:320] \"no\" \"yes\" \"yes\" \"yes\" ...\n $ paid.x    : chr [1:320] \"no\" \"no\" \"yes\" \"yes\" ...\n $ activities: Factor w/ 2 levels \"no\",\"yes\": 1 1 2 1 2 1 1 1 2 1 ...\n $ nursery   : chr [1:320] \"yes\" \"no\" \"yes\" \"yes\" ...\n $ higher    : chr [1:320] \"yes\" \"yes\" \"yes\" \"yes\" ...\n $ internet  : Factor w/ 2 levels \"no\",\"yes\": 1 2 2 1 2 2 1 2 2 2 ...\n $ romantic  : chr [1:320] \"no\" \"no\" \"yes\" \"no\" ...\n $ famrel    : num [1:320] 4 5 3 4 5 4 4 4 5 3 ...\n $ freetime  : num [1:320] 3 3 2 3 4 4 1 2 5 3 ...\n $ goout     : num [1:320] 4 3 2 2 2 4 4 2 1 3 ...\n $ Dalc      : num [1:320] 1 1 1 1 1 1 1 1 1 1 ...\n $ Walc      : num [1:320] 1 1 1 2 2 1 1 1 1 2 ...\n $ health    : num [1:320] 3 3 5 5 5 3 1 1 5 2 ...\n $ absences.x: num [1:320] 6 4 2 4 10 0 6 0 0 0 ...\n $ G1.x      : num [1:320] 5 5 15 6 15 12 6 16 14 10 ...\n $ G2.x      : num [1:320] 6 5 14 10 15 12 5 18 15 8 ...\n $ G3.x      : num [1:320] 6 6 15 10 15 11 6 19 15 9 ...\n $ paid.y    : chr [1:320] \"no\" \"no\" \"no\" \"no\" ...\n $ absences.y: num [1:320] 4 2 0 0 6 0 2 0 0 2 ...\n $ G1.y      : num [1:320] 0 9 14 11 12 13 10 15 12 14 ...\n $ G2.y      : num [1:320] 11 11 14 13 12 12 13 16 12 14 ...\n $ G3.y      : num [1:320] 11 11 14 13 13 13 13 17 13 14 ...\n\n\nAll of the variables look reasonable.\nDocument the missing values in the data.\n\nsum_na &lt;- function(column) {\n  sum(is.na(column))\n}\n\ncombined_data |&gt;\n  summarize(across(everything(), sum_na))\n\n# A tibble: 1 × 38\n  school   sex   age address famsize Pstatus  Medu  Fedu  Mjob  Fjob reason\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;   &lt;int&gt;   &lt;int&gt;   &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;  &lt;int&gt;\n1      0     0     0       0       0       0     0     0     0     0      0\n# ℹ 27 more variables: guardian &lt;int&gt;, traveltime &lt;int&gt;, studytime &lt;int&gt;,\n#   failures &lt;int&gt;, schoolsup &lt;int&gt;, famsup &lt;int&gt;, paid.x &lt;int&gt;,\n#   activities &lt;int&gt;, nursery &lt;int&gt;, higher &lt;int&gt;, internet &lt;int&gt;,\n#   romantic &lt;int&gt;, famrel &lt;int&gt;, freetime &lt;int&gt;, goout &lt;int&gt;, Dalc &lt;int&gt;,\n#   Walc &lt;int&gt;, health &lt;int&gt;, absences.x &lt;int&gt;, G1.x &lt;int&gt;, G2.x &lt;int&gt;,\n#   G3.x &lt;int&gt;, paid.y &lt;int&gt;, absences.y &lt;int&gt;, G1.y &lt;int&gt;, G2.y &lt;int&gt;,\n#   G3.y &lt;int&gt;\n\n\nLooks like there’s no missing values in the data.\n\n\nCreate a one-way contingency table, a two-way contingency table, and a three-way contingency table for some of the factor variables you created previously. Use table() to accomplish this.\n\n# One-way contingency table\ntable(combined_data$school)\n\n\n GP  MS \n287  33 \n\n\nIn this data set there are 33 students going to the Mousinho da Silveira school.\n\n# Two-way contingency table\ntable(combined_data$school, \n      combined_data$activities)\n\n    \n      no yes\n  GP 129 158\n  MS  21  12\n\n\nOf the students who go to Mousinho da Silveira school, 12 of them do extra curricular activities.\n\n# Three-way contingency table\ntable(combined_data$school,\n      combined_data$activities,\n      combined_data$internet)\n\n, ,  = no\n\n    \n      no yes\n  GP  21  19\n  MS   7   1\n\n, ,  = yes\n\n    \n      no yes\n  GP 108 139\n  MS  14  11\n\n\nOf the students who go to Mousinho da Silveira school and do extra curricular activities, only 1 of them doesn’t have internet.\nCreate a conditional two-way table using table(). That is, condition on one variable’s setting and create a two-way table. Do this using two different methods:\n\nOnce, by subsetting the data (say with filter()) and then creating the two-way table.\n\n\n# Conditional two-way table by subsetting data\nsubset_data &lt;- combined_data |&gt;\n  filter(internet == 'yes') |&gt;\n  select(school, activities, internet)\n\ntable(subset_data$school, subset_data$activities)\n\n    \n      no yes\n  GP 108 139\n  MS  14  11\n\n\n\nOnce, by creating a three-way table and subsetting it.\n\n\nthree_way_contingency &lt;- table(combined_data$school,\n                              combined_data$activities,\n                              combined_data$internet)\n\nthree_way_contingency[ , , \"yes\"]\n\n    \n      no yes\n  GP 108 139\n  MS  14  11\n\n\nCreate a two-way contingency table using group_by() and summarize() from dplyr. Then use pivot_wider() to make the result look more like the output from table().\n\ncombined_data |&gt;\n  group_by(school, activities) |&gt;\n  summarize(count = n()) |&gt;\n  pivot_wider(names_from = activities, values_from = count)\n\n`summarise()` has grouped output by 'school'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 2 × 3\n# Groups:   school [2]\n  school    no   yes\n  &lt;fct&gt;  &lt;int&gt; &lt;int&gt;\n1 GP       129   158\n2 MS        21    12\n\n\nCreate a stacked bar graph and a side-by-side bar graph. Give relevant x and y labels, and a title for the plots.\n\n# Stacked bar graph\nggplot(combined_data, aes(x = school, fill = activities)) + \n  geom_bar() +\n  labs(x = \"School\", y = \"Count\",\n       title = \"Extra-Curricular Involvement by School\") +\n  scale_fill_discrete(\"Activities\")\n\n\n\n\n\n\n\n\n\n# Side-by-side bar graph\nggplot(combined_data, aes(x = school, fill = activities)) +\n  geom_bar(position = \"dodge\") +\n  labs(x = \"School\", y = \"Count\", \n       title = \"Extra-Curricular Involvement by School\") +\n  scale_fill_discrete(\"Activities\")\n\n\n\n\n\n\n\n\n\n\n\nThe numeric variables are age, absences, and the three test grades variables (G1, G2, G3) from each data set.\nFind measures of center and spread for three of these variables (including at least one G3 variable).\n\ncombined_data |&gt;\n  summarize(across(c(\"age\", \"absences.x\", \"G3.x\"), list(\"mean\" = mean,\n                                                        \"median\" = median,\n                                                        \"sd\" = sd,\n                                                        \"IQR\" = IQR),\n                   .names = \"{.col}_{.fn}\"))\n\n# A tibble: 1 × 12\n  age_mean age_median age_sd age_IQR absences.x_mean absences.x_median\n     &lt;dbl&gt;      &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;           &lt;dbl&gt;             &lt;dbl&gt;\n1     16.5         16   1.14       1            5.41                 4\n# ℹ 6 more variables: absences.x_sd &lt;dbl&gt;, absences.x_IQR &lt;dbl&gt;,\n#   G3.x_mean &lt;dbl&gt;, G3.x_median &lt;dbl&gt;, G3.x_sd &lt;dbl&gt;, G3.x_IQR &lt;dbl&gt;\n\n\nRepeat while subsetting the data in a meaningful way.\n\ncombined_data |&gt;\n  filter(health &gt;= 2) |&gt;\n  summarize(across(c(\"age\", \"absences.x\", \"G3.x\"), list(\"mean\" = mean,\n                                                        \"median\" = median,\n                                                        \"sd\" = sd,\n                                                        \"IQR\" = IQR),\n                   .names = \"{.col}_{.fn}\"))\n\n# A tibble: 1 × 12\n  age_mean age_median age_sd age_IQR absences.x_mean absences.x_median\n     &lt;dbl&gt;      &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;           &lt;dbl&gt;             &lt;dbl&gt;\n1     16.5         16   1.08       1            5.37                 4\n# ℹ 6 more variables: absences.x_sd &lt;dbl&gt;, absences.x_IQR &lt;dbl&gt;,\n#   G3.x_mean &lt;dbl&gt;, G3.x_median &lt;dbl&gt;, G3.x_sd &lt;dbl&gt;, G3.x_IQR &lt;dbl&gt;\n\n\nFind measures of center and spread across a single grouping variable for three of these variables (including a G3 variable as one of them).\n\ncombined_data |&gt;\n  group_by(sex) |&gt;\n  summarize(across(c(\"age\", \"absences.y\", \"G3.y\"), list(\"mean\" = mean,\n                                                        \"median\" = median,\n                                                        \"sd\" = sd,\n                                                        \"IQR\" = IQR),\n                   .names = \"{.col}_{.fn}\"))\n\n# A tibble: 2 × 13\n  sex   age_mean age_median age_sd age_IQR absences.y_mean absences.y_median\n  &lt;fct&gt;    &lt;dbl&gt;      &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;           &lt;dbl&gt;             &lt;dbl&gt;\n1 F         16.6         17   1.06       1            3.48                 2\n2 M         16.4         16   1.22       2            2.97                 2\n# ℹ 6 more variables: absences.y_sd &lt;dbl&gt;, absences.y_IQR &lt;dbl&gt;,\n#   G3.y_mean &lt;dbl&gt;, G3.y_median &lt;dbl&gt;, G3.y_sd &lt;dbl&gt;, G3.y_IQR &lt;dbl&gt;\n\n\nFind measures of center and spread across two grouping variables for three of these variables (including a G3 variable as one of them).\n\ncombined_data |&gt;\n  group_by(sex, guardian) |&gt;\n  summarize(across(c(\"G1.x\", \"G2.x\", \"G3.x\"), list(\"mean\" = mean,\n                                                   \"median\" = median,\n                                                   \"sd\" = sd,\n                                                   \"IQR\" = IQR),\n                   .names = \"{.col}_{.fn}\"))\n\n`summarise()` has grouped output by 'sex'. You can override using the `.groups`\nargument.\n\n\n# A tibble: 6 × 14\n# Groups:   sex [2]\n  sex   guardian G1.x_mean G1.x_median G1.x_sd G1.x_IQR G2.x_mean G2.x_median\n  &lt;fct&gt; &lt;chr&gt;        &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;       &lt;dbl&gt;\n1 F     father        11.5          11    3.28     4         11.7          11\n2 F     mother        10.8          10    3.18     5         10.6          10\n3 F     other          8.6           8    1.34     2          6.6           8\n4 M     father        11.7          12    2.98     4         11.9          12\n5 M     mother        11.9          12    3.23     6         11.7          12\n6 M     other         10.2          10    3.30     4.75      11            10\n# ℹ 6 more variables: G2.x_sd &lt;dbl&gt;, G2.x_IQR &lt;dbl&gt;, G3.x_mean &lt;dbl&gt;,\n#   G3.x_median &lt;dbl&gt;, G3.x_sd &lt;dbl&gt;, G3.x_IQR &lt;dbl&gt;\n\n\nCreate a correlation matrix between all of the numeric variables.\n\ncombined_data |&gt;\n  select(age, absences.x, absences.y, G1.x, G1.y, G2.x, G2.y, G3.x, G3.y) |&gt;\n  cor()\n\n                    age  absences.x  absences.y        G1.x        G1.y\nage         1.000000000  0.14392517  0.04733182 -0.11037935 -0.05054968\nabsences.x  0.143925170  1.00000000  0.56381559 -0.06946116 -0.09247761\nabsences.y  0.047331821  0.56381559  1.00000000 -0.08760610 -0.09864117\nG1.x       -0.110379348 -0.06946116 -0.08760610  1.00000000  0.59293522\nG1.y       -0.050549678 -0.09247761 -0.09864117  0.59293522  1.00000000\nG2.x       -0.186187399 -0.07580245 -0.12636236  0.86588796  0.54300736\nG2.y        0.029366456 -0.14516402 -0.12070727  0.59517224  0.88415041\nG3.x       -0.206031862 -0.02811847 -0.11664046  0.81859418  0.52288461\nG3.y       -0.009103257 -0.13572638 -0.07145201  0.54388734  0.82541432\n                  G2.x        G2.y        G3.x         G3.y\nage        -0.18618740  0.02936646 -0.20603186 -0.009103257\nabsences.x -0.07580245 -0.14516402 -0.02811847 -0.135726385\nabsences.y -0.12636236 -0.12070727 -0.11664046 -0.071452010\nG1.x        0.86588796  0.59517224  0.81859418  0.543887345\nG1.y        0.54300736  0.88415041  0.52288461  0.825414320\nG2.x        1.00000000  0.56521350  0.91357599  0.496032649\nG2.y        0.56521350  1.00000000  0.54545279  0.894309821\nG3.x        0.91357599  0.54545279  1.00000000  0.475956497\nG3.y        0.49603265  0.89430982  0.47595650  1.000000000\n\n\nCreate a histogram, kernel density plot, and boxplot for two of the numeric variables across one of the categorical variables. Add appropriate labels and titles.\n\nggplot(combined_data, aes(x = G3.y)) +\n  geom_histogram(binwidth = 1, aes(fill = famsize)) +\n  labs(x = \"Final Grade in Portuguese\", y = \"Count\", \n       title = \"Histogram of Final Portuguese Grade per Family Size\") +\n  scale_fill_discrete(\"Family Size\")\n\n\n\n\n\n\n\n\n\nggplot(combined_data, aes(x = G3.y)) +\n  geom_density(kernel = \"gaussian\", alpha = 0.5, aes(fill = famsize)) +\n  labs(x = \"Final Grade in Portuguese\", y = \"Density\", \n       title = \"Density Plot of Final Portuguese Grade per Family Size\") +\n  scale_fill_discrete(\"Family Size\")\n\n\n\n\n\n\n\n\n\nggplot(combined_data) +\n  geom_boxplot(aes(x = famsize, y = G3.y, fill = famsize)) +\n  labs(x = \"Family Size\", y = \"Final Grade in Portuguese\", \n       title = \"Boxplot of Final Portuguese Grade per Family Size\") +\n  scale_fill_discrete(\"Family Size\")\n\n\n\n\n\n\n\n\n\nggplot(combined_data, aes(x = absences.y)) +\n  geom_histogram(binwidth = 1, aes(fill = famsize)) +\n  labs(x = \"Absences in Portuguese Class\", y = \"Count\", \n       title = \"Histogram of Absences in Portuguese Class per Family Size\") +\n  scale_fill_discrete(\"Family Size\")\n\n\n\n\n\n\n\n\n\nggplot(combined_data, aes(x = absences.y)) +\n  geom_density(kernel = \"gaussian\", alpha = 0.5, aes(fill = famsize)) +\n  labs(x = \"Absences in Portuguese Class\", y = \"Density\", \n       title = \"Density Plot of Absences in Portuguese Class per Family Size\") +\n  scale_fill_discrete(\"Family Size\")\n\n\n\n\n\n\n\n\n\nggplot(combined_data) +\n  geom_boxplot(aes(x = famsize, y = absences.y, fill = famsize)) +\n  labs(x = \"Family Size\", y = \"Absences in Portuguese Class\", \n       title = \"Boxplot of Absences in Portuguese Class per Family Size\") +\n  scale_fill_discrete(\"Family Size\")\n\n\n\n\n\n\n\n\nCreate two scatterplots relating a G3 variable to other numeric variables (put G3 on the y-axis). You should jitter the points if they sit on top of each other. Color the points by a categorical variable in each. Add appropriate labels and titles.\n\nggplot(combined_data, aes(x = G1.x, y = G3.x, color = paid.x)) +\n  geom_jitter(width = 0.2, alpha = 0.3) +\n  labs(x = \"First Period Grade in Math\", y = \"Final Grade in Math\", \n       title = \"First Period Grade vs Final Grade in Math by Paid Classes\",\n       color = \"Paid Classes\")\n\n\n\n\n\n\n\n\n\nggplot(combined_data, aes(x = G2.x, y = G3.x, color = paid.x)) +\n  geom_jitter(width = 0.2, alpha = 0.3) +\n  labs(x = \"Second Period Grade in Math\", y = \"Final Grade in Math\", \n       title = \"Second Period Grade vs Final Grade in Math by Paid Classes\",\n       color = \"Paid Classes\")\n\n\n\n\n\n\n\n\nRepeat the scatter plot step but use faceting to obtain graphs at each setting of another categorical variable.\n\nggplot(combined_data, aes(x = G1.x, y = G3.x, color = paid.x)) +\n  geom_jitter(width = 0.2, alpha = 0.3) +\n  facet_wrap(~ sex) +\n  labs(x = \"First Period Grade in Math\", y = \"Final Grade in Math\", \n       title = \"First Period Grade vs Final Grade in Math by Sex and Paid Classes\",\n       color = \"Paid Classes\")\n\n\n\n\n\n\n\n\n\nggplot(combined_data, aes(x = G2.x, y = G3.x, color = paid.x)) +\n  geom_jitter(width = 0.2, alpha = 0.3) +\n  facet_wrap(~ sex) +\n  labs(x = \"Second Period Grade in Math\", y = \"Final Grade in Math\", \n       title =\"Second Period Grade vs Final Grade in Math by Sex and Paid Classes\",\n       color = \"Paid Classes\")\n\n\n\n\n\n\n\n\nRepeat the scatter plot step but use faceting to obtain graphs at each combination of two categorical variables.\n\nggplot(combined_data, aes(x = G1.x, y = G3.x, color = paid.x)) +\n  geom_jitter(width = 0.2, alpha = 0.3) +\n  facet_grid(sex ~ famsize) +\n  labs(x = \"First Period Grade in Math\", y = \"Final Grade in Math\", \n       title = \"First Period vs Final Grade in Math by Family Size, Sex and Paid Classes\",\n       color = \"Paid Classes\")\n\n\n\n\n\n\n\n\n\nggplot(combined_data, aes(x = G2.x, y = G3.x, color = paid.x)) +\n  geom_jitter(width = 0.2, alpha = 0.3) +\n  facet_grid(sex ~ famsize) +\n  labs(x = \"Second Period Grade in Math\", y = \"Final Grade in Math\", \n       title = \"Second Period vs Final Grade in Math by Family Size, Sex and Paid Classes\",\n       color = \"Paid Classes\")"
  },
  {
    "objectID": "Homework5.html#summarizing-student-data",
    "href": "Homework5.html#summarizing-student-data",
    "title": "Homework 5",
    "section": "",
    "text": "# Load libraries\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\n\nModify the code provided to read in the data from a local file source and combine the two data frames. Use local paths as they do in their code.\n\n# Code provided\nd1=read.table(\"student+performance/student/student-mat.csv\",sep=\";\",header=TRUE)\nd2=read.table(\"student+performance/student/student-por.csv\",sep=\";\",header=TRUE)\n\nd3=merge(d1,d2,by=c(\"school\",\"sex\",\"age\",\"address\",\"famsize\",\"Pstatus\",\"Medu\",\"Fedu\",\"Mjob\",\"Fjob\",\"reason\",\"nursery\",\"internet\"))\nprint(nrow(d3)) # 382 students\n\n[1] 382\n\n\nRead in and combine the data using functions from the tidyverse. Use an inner_join() on the variables they used in their code. Do you notice any issues? Make a note of the issue.\n\n# Load the data\nmath_data &lt;- read_csv2(\"student+performance/student/student-mat.csv\", \n                       col_names=TRUE)\n\nℹ Using \"','\" as decimal and \"'.'\" as grouping mark. Use `read_delim()` for more control.\n\n\nRows: 395 Columns: 33\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (17): school, sex, address, famsize, Pstatus, Mjob, Fjob, reason, guardi...\ndbl (16): age, Medu, Fedu, traveltime, studytime, failures, famrel, freetime...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nportuguese_data &lt;- read_csv2(\"student+performance/student/student-por.csv\",\n                             col_names=TRUE)\n\nℹ Using \"','\" as decimal and \"'.'\" as grouping mark. Use `read_delim()` for more control.\nRows: 649 Columns: 33── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (17): school, sex, address, famsize, Pstatus, Mjob, Fjob, reason, guardi...\ndbl (16): age, Medu, Fedu, traveltime, studytime, failures, famrel, freetime...\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# inner join\ncombined_data &lt;- inner_join(math_data, portuguese_data, \n                            by = c(\"school\",\"sex\",\"age\",\"address\",\n                                   \"famsize\",\"Pstatus\",\"Medu\",\"Fedu\",\n                                   \"Mjob\",\"Fjob\",\"reason\",\"nursery\",\"internet\"))\n\nWarning in inner_join(math_data, portuguese_data, by = c(\"school\", \"sex\", : Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 79 of `x` matches multiple rows in `y`.\nℹ Row 79 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\ncombined_data\n\n# A tibble: 382 × 53\n   school sex     age address famsize Pstatus  Medu  Fedu Mjob     Fjob   reason\n   &lt;chr&gt;  &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt;  &lt;chr&gt; \n 1 GP     F        18 U       GT3     A           4     4 at_home  teach… course\n 2 GP     F        17 U       GT3     T           1     1 at_home  other  course\n 3 GP     F        15 U       LE3     T           1     1 at_home  other  other \n 4 GP     F        15 U       GT3     T           4     2 health   servi… home  \n 5 GP     F        16 U       GT3     T           3     3 other    other  home  \n 6 GP     M        16 U       LE3     T           4     3 services other  reput…\n 7 GP     M        16 U       LE3     T           2     2 other    other  home  \n 8 GP     F        17 U       GT3     A           4     4 other    teach… home  \n 9 GP     M        15 U       LE3     A           3     2 services other  home  \n10 GP     M        15 U       GT3     T           3     4 other    other  home  \n# ℹ 372 more rows\n# ℹ 42 more variables: guardian.x &lt;chr&gt;, traveltime.x &lt;dbl&gt;, studytime.x &lt;dbl&gt;,\n#   failures.x &lt;dbl&gt;, schoolsup.x &lt;chr&gt;, famsup.x &lt;chr&gt;, paid.x &lt;chr&gt;,\n#   activities.x &lt;chr&gt;, nursery &lt;chr&gt;, higher.x &lt;chr&gt;, internet &lt;chr&gt;,\n#   romantic.x &lt;chr&gt;, famrel.x &lt;dbl&gt;, freetime.x &lt;dbl&gt;, goout.x &lt;dbl&gt;,\n#   Dalc.x &lt;dbl&gt;, Walc.x &lt;dbl&gt;, health.x &lt;dbl&gt;, absences.x &lt;dbl&gt;, G1.x &lt;dbl&gt;,\n#   G2.x &lt;dbl&gt;, G3.x &lt;dbl&gt;, guardian.y &lt;chr&gt;, traveltime.y &lt;dbl&gt;, …\n\n\nThere appears to be an unexpected many-to-many relationship between ‘x’ and ‘y’. Row 79 of ‘x’ matches multiple rows in ‘y’, and vice versa.\nUser an inner_join() on all variables other than G1, G2, G3, paid, and absences. Use this form of the combined data in further exercises.\n\n# inner join\ncombined_data &lt;- inner_join(math_data, portuguese_data, \n                            by = c(\"school\",\"sex\",\"age\",\"address\",\n                                   \"famsize\",\"Pstatus\",\"Medu\",\"Fedu\",\n                                   \"Mjob\",\"Fjob\",\"reason\",\n                                   \"guardian\", \"traveltime\",\"studytime\",\"failures\",\n                                   \"schoolsup\", \"famsup\", \"activities\", \"nursery\",\n                                   \"higher\", \"internet\", \"romantic\", \"famrel\",\n                                   \"freetime\", \"goout\", \"Dalc\", \"Walc\", \"health\"))\n\ncombined_data\n\n# A tibble: 320 × 38\n   school sex     age address famsize Pstatus  Medu  Fedu Mjob     Fjob   reason\n   &lt;chr&gt;  &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt;  &lt;chr&gt; \n 1 GP     F        18 U       GT3     A           4     4 at_home  teach… course\n 2 GP     F        17 U       GT3     T           1     1 at_home  other  course\n 3 GP     F        15 U       GT3     T           4     2 health   servi… home  \n 4 GP     F        16 U       GT3     T           3     3 other    other  home  \n 5 GP     M        16 U       LE3     T           4     3 services other  reput…\n 6 GP     M        16 U       LE3     T           2     2 other    other  home  \n 7 GP     F        17 U       GT3     A           4     4 other    teach… home  \n 8 GP     M        15 U       LE3     A           3     2 services other  home  \n 9 GP     M        15 U       GT3     T           3     4 other    other  home  \n10 GP     F        15 U       GT3     T           4     4 teacher  health reput…\n# ℹ 310 more rows\n# ℹ 27 more variables: guardian &lt;chr&gt;, traveltime &lt;dbl&gt;, studytime &lt;dbl&gt;,\n#   failures &lt;dbl&gt;, schoolsup &lt;chr&gt;, famsup &lt;chr&gt;, paid.x &lt;chr&gt;,\n#   activities &lt;chr&gt;, nursery &lt;chr&gt;, higher &lt;chr&gt;, internet &lt;chr&gt;,\n#   romantic &lt;chr&gt;, famrel &lt;dbl&gt;, freetime &lt;dbl&gt;, goout &lt;dbl&gt;, Dalc &lt;dbl&gt;,\n#   Walc &lt;dbl&gt;, health &lt;dbl&gt;, absences.x &lt;dbl&gt;, G1.x &lt;dbl&gt;, G2.x &lt;dbl&gt;,\n#   G3.x &lt;dbl&gt;, paid.y &lt;chr&gt;, absences.y &lt;dbl&gt;, G1.y &lt;dbl&gt;, G2.y &lt;dbl&gt;, …\n\n\nNext, for the math data, Portuguese, and combined data, choose four categorical variables you are interested in and convert those into factor variables in each tibble (use the same four in each). Use the mutate() function to accomplish this.\n\nmath_data &lt;- math_data |&gt;\n  mutate(school = as.factor(school),\n         sex = as.factor(sex),\n         internet = as.factor(internet),\n         activities = as.factor(activities))\n\nportuguese_data &lt;- portuguese_data |&gt;\n  mutate(school = as.factor(school),\n         sex = as.factor(sex),\n         internet = as.factor(internet),\n         activities = as.factor(activities))\n\ncombined_data &lt;- combined_data |&gt;\n  mutate(school = as.factor(school),\n         sex = as.factor(sex),\n         internet = as.factor(internet),\n         activities = as.factor(activities))\n\n\n\n\nLook at how the data is stored and see if everything makes sense.\n\nstr(combined_data)\n\ntibble [320 × 38] (S3: tbl_df/tbl/data.frame)\n $ school    : Factor w/ 2 levels \"GP\",\"MS\": 1 1 1 1 1 1 1 1 1 1 ...\n $ sex       : Factor w/ 2 levels \"F\",\"M\": 1 1 1 1 2 2 1 2 2 1 ...\n $ age       : num [1:320] 18 17 15 16 16 16 17 15 15 15 ...\n $ address   : chr [1:320] \"U\" \"U\" \"U\" \"U\" ...\n $ famsize   : chr [1:320] \"GT3\" \"GT3\" \"GT3\" \"GT3\" ...\n $ Pstatus   : chr [1:320] \"A\" \"T\" \"T\" \"T\" ...\n $ Medu      : num [1:320] 4 1 4 3 4 2 4 3 3 4 ...\n $ Fedu      : num [1:320] 4 1 2 3 3 2 4 2 4 4 ...\n $ Mjob      : chr [1:320] \"at_home\" \"at_home\" \"health\" \"other\" ...\n $ Fjob      : chr [1:320] \"teacher\" \"other\" \"services\" \"other\" ...\n $ reason    : chr [1:320] \"course\" \"course\" \"home\" \"home\" ...\n $ guardian  : chr [1:320] \"mother\" \"father\" \"mother\" \"father\" ...\n $ traveltime: num [1:320] 2 1 1 1 1 1 2 1 1 1 ...\n $ studytime : num [1:320] 2 2 3 2 2 2 2 2 2 2 ...\n $ failures  : num [1:320] 0 0 0 0 0 0 0 0 0 0 ...\n $ schoolsup : chr [1:320] \"yes\" \"no\" \"no\" \"no\" ...\n $ famsup    : chr [1:320] \"no\" \"yes\" \"yes\" \"yes\" ...\n $ paid.x    : chr [1:320] \"no\" \"no\" \"yes\" \"yes\" ...\n $ activities: Factor w/ 2 levels \"no\",\"yes\": 1 1 2 1 2 1 1 1 2 1 ...\n $ nursery   : chr [1:320] \"yes\" \"no\" \"yes\" \"yes\" ...\n $ higher    : chr [1:320] \"yes\" \"yes\" \"yes\" \"yes\" ...\n $ internet  : Factor w/ 2 levels \"no\",\"yes\": 1 2 2 1 2 2 1 2 2 2 ...\n $ romantic  : chr [1:320] \"no\" \"no\" \"yes\" \"no\" ...\n $ famrel    : num [1:320] 4 5 3 4 5 4 4 4 5 3 ...\n $ freetime  : num [1:320] 3 3 2 3 4 4 1 2 5 3 ...\n $ goout     : num [1:320] 4 3 2 2 2 4 4 2 1 3 ...\n $ Dalc      : num [1:320] 1 1 1 1 1 1 1 1 1 1 ...\n $ Walc      : num [1:320] 1 1 1 2 2 1 1 1 1 2 ...\n $ health    : num [1:320] 3 3 5 5 5 3 1 1 5 2 ...\n $ absences.x: num [1:320] 6 4 2 4 10 0 6 0 0 0 ...\n $ G1.x      : num [1:320] 5 5 15 6 15 12 6 16 14 10 ...\n $ G2.x      : num [1:320] 6 5 14 10 15 12 5 18 15 8 ...\n $ G3.x      : num [1:320] 6 6 15 10 15 11 6 19 15 9 ...\n $ paid.y    : chr [1:320] \"no\" \"no\" \"no\" \"no\" ...\n $ absences.y: num [1:320] 4 2 0 0 6 0 2 0 0 2 ...\n $ G1.y      : num [1:320] 0 9 14 11 12 13 10 15 12 14 ...\n $ G2.y      : num [1:320] 11 11 14 13 12 12 13 16 12 14 ...\n $ G3.y      : num [1:320] 11 11 14 13 13 13 13 17 13 14 ...\n\n\nAll of the variables look reasonable.\nDocument the missing values in the data.\n\nsum_na &lt;- function(column) {\n  sum(is.na(column))\n}\n\ncombined_data |&gt;\n  summarize(across(everything(), sum_na))\n\n# A tibble: 1 × 38\n  school   sex   age address famsize Pstatus  Medu  Fedu  Mjob  Fjob reason\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;   &lt;int&gt;   &lt;int&gt;   &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;  &lt;int&gt;\n1      0     0     0       0       0       0     0     0     0     0      0\n# ℹ 27 more variables: guardian &lt;int&gt;, traveltime &lt;int&gt;, studytime &lt;int&gt;,\n#   failures &lt;int&gt;, schoolsup &lt;int&gt;, famsup &lt;int&gt;, paid.x &lt;int&gt;,\n#   activities &lt;int&gt;, nursery &lt;int&gt;, higher &lt;int&gt;, internet &lt;int&gt;,\n#   romantic &lt;int&gt;, famrel &lt;int&gt;, freetime &lt;int&gt;, goout &lt;int&gt;, Dalc &lt;int&gt;,\n#   Walc &lt;int&gt;, health &lt;int&gt;, absences.x &lt;int&gt;, G1.x &lt;int&gt;, G2.x &lt;int&gt;,\n#   G3.x &lt;int&gt;, paid.y &lt;int&gt;, absences.y &lt;int&gt;, G1.y &lt;int&gt;, G2.y &lt;int&gt;,\n#   G3.y &lt;int&gt;\n\n\nLooks like there’s no missing values in the data.\n\n\nCreate a one-way contingency table, a two-way contingency table, and a three-way contingency table for some of the factor variables you created previously. Use table() to accomplish this.\n\n# One-way contingency table\ntable(combined_data$school)\n\n\n GP  MS \n287  33 \n\n\nIn this data set there are 33 students going to the Mousinho da Silveira school.\n\n# Two-way contingency table\ntable(combined_data$school, \n      combined_data$activities)\n\n    \n      no yes\n  GP 129 158\n  MS  21  12\n\n\nOf the students who go to Mousinho da Silveira school, 12 of them do extra curricular activities.\n\n# Three-way contingency table\ntable(combined_data$school,\n      combined_data$activities,\n      combined_data$internet)\n\n, ,  = no\n\n    \n      no yes\n  GP  21  19\n  MS   7   1\n\n, ,  = yes\n\n    \n      no yes\n  GP 108 139\n  MS  14  11\n\n\nOf the students who go to Mousinho da Silveira school and do extra curricular activities, only 1 of them doesn’t have internet.\nCreate a conditional two-way table using table(). That is, condition on one variable’s setting and create a two-way table. Do this using two different methods:\n\nOnce, by subsetting the data (say with filter()) and then creating the two-way table.\n\n\n# Conditional two-way table by subsetting data\nsubset_data &lt;- combined_data |&gt;\n  filter(internet == 'yes') |&gt;\n  select(school, activities, internet)\n\ntable(subset_data$school, subset_data$activities)\n\n    \n      no yes\n  GP 108 139\n  MS  14  11\n\n\n\nOnce, by creating a three-way table and subsetting it.\n\n\nthree_way_contingency &lt;- table(combined_data$school,\n                              combined_data$activities,\n                              combined_data$internet)\n\nthree_way_contingency[ , , \"yes\"]\n\n    \n      no yes\n  GP 108 139\n  MS  14  11\n\n\nCreate a two-way contingency table using group_by() and summarize() from dplyr. Then use pivot_wider() to make the result look more like the output from table().\n\ncombined_data |&gt;\n  group_by(school, activities) |&gt;\n  summarize(count = n()) |&gt;\n  pivot_wider(names_from = activities, values_from = count)\n\n`summarise()` has grouped output by 'school'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 2 × 3\n# Groups:   school [2]\n  school    no   yes\n  &lt;fct&gt;  &lt;int&gt; &lt;int&gt;\n1 GP       129   158\n2 MS        21    12\n\n\nCreate a stacked bar graph and a side-by-side bar graph. Give relevant x and y labels, and a title for the plots.\n\n# Stacked bar graph\nggplot(combined_data, aes(x = school, fill = activities)) + \n  geom_bar() +\n  labs(x = \"School\", y = \"Count\",\n       title = \"Extra-Curricular Involvement by School\") +\n  scale_fill_discrete(\"Activities\")\n\n\n\n\n\n\n\n\n\n# Side-by-side bar graph\nggplot(combined_data, aes(x = school, fill = activities)) +\n  geom_bar(position = \"dodge\") +\n  labs(x = \"School\", y = \"Count\", \n       title = \"Extra-Curricular Involvement by School\") +\n  scale_fill_discrete(\"Activities\")\n\n\n\n\n\n\n\n\n\n\n\nThe numeric variables are age, absences, and the three test grades variables (G1, G2, G3) from each data set.\nFind measures of center and spread for three of these variables (including at least one G3 variable).\n\ncombined_data |&gt;\n  summarize(across(c(\"age\", \"absences.x\", \"G3.x\"), list(\"mean\" = mean,\n                                                        \"median\" = median,\n                                                        \"sd\" = sd,\n                                                        \"IQR\" = IQR),\n                   .names = \"{.col}_{.fn}\"))\n\n# A tibble: 1 × 12\n  age_mean age_median age_sd age_IQR absences.x_mean absences.x_median\n     &lt;dbl&gt;      &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;           &lt;dbl&gt;             &lt;dbl&gt;\n1     16.5         16   1.14       1            5.41                 4\n# ℹ 6 more variables: absences.x_sd &lt;dbl&gt;, absences.x_IQR &lt;dbl&gt;,\n#   G3.x_mean &lt;dbl&gt;, G3.x_median &lt;dbl&gt;, G3.x_sd &lt;dbl&gt;, G3.x_IQR &lt;dbl&gt;\n\n\nRepeat while subsetting the data in a meaningful way.\n\ncombined_data |&gt;\n  filter(health &gt;= 2) |&gt;\n  summarize(across(c(\"age\", \"absences.x\", \"G3.x\"), list(\"mean\" = mean,\n                                                        \"median\" = median,\n                                                        \"sd\" = sd,\n                                                        \"IQR\" = IQR),\n                   .names = \"{.col}_{.fn}\"))\n\n# A tibble: 1 × 12\n  age_mean age_median age_sd age_IQR absences.x_mean absences.x_median\n     &lt;dbl&gt;      &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;           &lt;dbl&gt;             &lt;dbl&gt;\n1     16.5         16   1.08       1            5.37                 4\n# ℹ 6 more variables: absences.x_sd &lt;dbl&gt;, absences.x_IQR &lt;dbl&gt;,\n#   G3.x_mean &lt;dbl&gt;, G3.x_median &lt;dbl&gt;, G3.x_sd &lt;dbl&gt;, G3.x_IQR &lt;dbl&gt;\n\n\nFind measures of center and spread across a single grouping variable for three of these variables (including a G3 variable as one of them).\n\ncombined_data |&gt;\n  group_by(sex) |&gt;\n  summarize(across(c(\"age\", \"absences.y\", \"G3.y\"), list(\"mean\" = mean,\n                                                        \"median\" = median,\n                                                        \"sd\" = sd,\n                                                        \"IQR\" = IQR),\n                   .names = \"{.col}_{.fn}\"))\n\n# A tibble: 2 × 13\n  sex   age_mean age_median age_sd age_IQR absences.y_mean absences.y_median\n  &lt;fct&gt;    &lt;dbl&gt;      &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;           &lt;dbl&gt;             &lt;dbl&gt;\n1 F         16.6         17   1.06       1            3.48                 2\n2 M         16.4         16   1.22       2            2.97                 2\n# ℹ 6 more variables: absences.y_sd &lt;dbl&gt;, absences.y_IQR &lt;dbl&gt;,\n#   G3.y_mean &lt;dbl&gt;, G3.y_median &lt;dbl&gt;, G3.y_sd &lt;dbl&gt;, G3.y_IQR &lt;dbl&gt;\n\n\nFind measures of center and spread across two grouping variables for three of these variables (including a G3 variable as one of them).\n\ncombined_data |&gt;\n  group_by(sex, guardian) |&gt;\n  summarize(across(c(\"G1.x\", \"G2.x\", \"G3.x\"), list(\"mean\" = mean,\n                                                   \"median\" = median,\n                                                   \"sd\" = sd,\n                                                   \"IQR\" = IQR),\n                   .names = \"{.col}_{.fn}\"))\n\n`summarise()` has grouped output by 'sex'. You can override using the `.groups`\nargument.\n\n\n# A tibble: 6 × 14\n# Groups:   sex [2]\n  sex   guardian G1.x_mean G1.x_median G1.x_sd G1.x_IQR G2.x_mean G2.x_median\n  &lt;fct&gt; &lt;chr&gt;        &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;       &lt;dbl&gt;\n1 F     father        11.5          11    3.28     4         11.7          11\n2 F     mother        10.8          10    3.18     5         10.6          10\n3 F     other          8.6           8    1.34     2          6.6           8\n4 M     father        11.7          12    2.98     4         11.9          12\n5 M     mother        11.9          12    3.23     6         11.7          12\n6 M     other         10.2          10    3.30     4.75      11            10\n# ℹ 6 more variables: G2.x_sd &lt;dbl&gt;, G2.x_IQR &lt;dbl&gt;, G3.x_mean &lt;dbl&gt;,\n#   G3.x_median &lt;dbl&gt;, G3.x_sd &lt;dbl&gt;, G3.x_IQR &lt;dbl&gt;\n\n\nCreate a correlation matrix between all of the numeric variables.\n\ncombined_data |&gt;\n  select(age, absences.x, absences.y, G1.x, G1.y, G2.x, G2.y, G3.x, G3.y) |&gt;\n  cor()\n\n                    age  absences.x  absences.y        G1.x        G1.y\nage         1.000000000  0.14392517  0.04733182 -0.11037935 -0.05054968\nabsences.x  0.143925170  1.00000000  0.56381559 -0.06946116 -0.09247761\nabsences.y  0.047331821  0.56381559  1.00000000 -0.08760610 -0.09864117\nG1.x       -0.110379348 -0.06946116 -0.08760610  1.00000000  0.59293522\nG1.y       -0.050549678 -0.09247761 -0.09864117  0.59293522  1.00000000\nG2.x       -0.186187399 -0.07580245 -0.12636236  0.86588796  0.54300736\nG2.y        0.029366456 -0.14516402 -0.12070727  0.59517224  0.88415041\nG3.x       -0.206031862 -0.02811847 -0.11664046  0.81859418  0.52288461\nG3.y       -0.009103257 -0.13572638 -0.07145201  0.54388734  0.82541432\n                  G2.x        G2.y        G3.x         G3.y\nage        -0.18618740  0.02936646 -0.20603186 -0.009103257\nabsences.x -0.07580245 -0.14516402 -0.02811847 -0.135726385\nabsences.y -0.12636236 -0.12070727 -0.11664046 -0.071452010\nG1.x        0.86588796  0.59517224  0.81859418  0.543887345\nG1.y        0.54300736  0.88415041  0.52288461  0.825414320\nG2.x        1.00000000  0.56521350  0.91357599  0.496032649\nG2.y        0.56521350  1.00000000  0.54545279  0.894309821\nG3.x        0.91357599  0.54545279  1.00000000  0.475956497\nG3.y        0.49603265  0.89430982  0.47595650  1.000000000\n\n\nCreate a histogram, kernel density plot, and boxplot for two of the numeric variables across one of the categorical variables. Add appropriate labels and titles.\n\nggplot(combined_data, aes(x = G3.y)) +\n  geom_histogram(binwidth = 1, aes(fill = famsize)) +\n  labs(x = \"Final Grade in Portuguese\", y = \"Count\", \n       title = \"Histogram of Final Portuguese Grade per Family Size\") +\n  scale_fill_discrete(\"Family Size\")\n\n\n\n\n\n\n\n\n\nggplot(combined_data, aes(x = G3.y)) +\n  geom_density(kernel = \"gaussian\", alpha = 0.5, aes(fill = famsize)) +\n  labs(x = \"Final Grade in Portuguese\", y = \"Density\", \n       title = \"Density Plot of Final Portuguese Grade per Family Size\") +\n  scale_fill_discrete(\"Family Size\")\n\n\n\n\n\n\n\n\n\nggplot(combined_data) +\n  geom_boxplot(aes(x = famsize, y = G3.y, fill = famsize)) +\n  labs(x = \"Family Size\", y = \"Final Grade in Portuguese\", \n       title = \"Boxplot of Final Portuguese Grade per Family Size\") +\n  scale_fill_discrete(\"Family Size\")\n\n\n\n\n\n\n\n\n\nggplot(combined_data, aes(x = absences.y)) +\n  geom_histogram(binwidth = 1, aes(fill = famsize)) +\n  labs(x = \"Absences in Portuguese Class\", y = \"Count\", \n       title = \"Histogram of Absences in Portuguese Class per Family Size\") +\n  scale_fill_discrete(\"Family Size\")\n\n\n\n\n\n\n\n\n\nggplot(combined_data, aes(x = absences.y)) +\n  geom_density(kernel = \"gaussian\", alpha = 0.5, aes(fill = famsize)) +\n  labs(x = \"Absences in Portuguese Class\", y = \"Density\", \n       title = \"Density Plot of Absences in Portuguese Class per Family Size\") +\n  scale_fill_discrete(\"Family Size\")\n\n\n\n\n\n\n\n\n\nggplot(combined_data) +\n  geom_boxplot(aes(x = famsize, y = absences.y, fill = famsize)) +\n  labs(x = \"Family Size\", y = \"Absences in Portuguese Class\", \n       title = \"Boxplot of Absences in Portuguese Class per Family Size\") +\n  scale_fill_discrete(\"Family Size\")\n\n\n\n\n\n\n\n\nCreate two scatterplots relating a G3 variable to other numeric variables (put G3 on the y-axis). You should jitter the points if they sit on top of each other. Color the points by a categorical variable in each. Add appropriate labels and titles.\n\nggplot(combined_data, aes(x = G1.x, y = G3.x, color = paid.x)) +\n  geom_jitter(width = 0.2, alpha = 0.3) +\n  labs(x = \"First Period Grade in Math\", y = \"Final Grade in Math\", \n       title = \"First Period Grade vs Final Grade in Math by Paid Classes\",\n       color = \"Paid Classes\")\n\n\n\n\n\n\n\n\n\nggplot(combined_data, aes(x = G2.x, y = G3.x, color = paid.x)) +\n  geom_jitter(width = 0.2, alpha = 0.3) +\n  labs(x = \"Second Period Grade in Math\", y = \"Final Grade in Math\", \n       title = \"Second Period Grade vs Final Grade in Math by Paid Classes\",\n       color = \"Paid Classes\")\n\n\n\n\n\n\n\n\nRepeat the scatter plot step but use faceting to obtain graphs at each setting of another categorical variable.\n\nggplot(combined_data, aes(x = G1.x, y = G3.x, color = paid.x)) +\n  geom_jitter(width = 0.2, alpha = 0.3) +\n  facet_wrap(~ sex) +\n  labs(x = \"First Period Grade in Math\", y = \"Final Grade in Math\", \n       title = \"First Period Grade vs Final Grade in Math by Sex and Paid Classes\",\n       color = \"Paid Classes\")\n\n\n\n\n\n\n\n\n\nggplot(combined_data, aes(x = G2.x, y = G3.x, color = paid.x)) +\n  geom_jitter(width = 0.2, alpha = 0.3) +\n  facet_wrap(~ sex) +\n  labs(x = \"Second Period Grade in Math\", y = \"Final Grade in Math\", \n       title =\"Second Period Grade vs Final Grade in Math by Sex and Paid Classes\",\n       color = \"Paid Classes\")\n\n\n\n\n\n\n\n\nRepeat the scatter plot step but use faceting to obtain graphs at each combination of two categorical variables.\n\nggplot(combined_data, aes(x = G1.x, y = G3.x, color = paid.x)) +\n  geom_jitter(width = 0.2, alpha = 0.3) +\n  facet_grid(sex ~ famsize) +\n  labs(x = \"First Period Grade in Math\", y = \"Final Grade in Math\", \n       title = \"First Period vs Final Grade in Math by Family Size, Sex and Paid Classes\",\n       color = \"Paid Classes\")\n\n\n\n\n\n\n\n\n\nggplot(combined_data, aes(x = G2.x, y = G3.x, color = paid.x)) +\n  geom_jitter(width = 0.2, alpha = 0.3) +\n  facet_grid(sex ~ famsize) +\n  labs(x = \"Second Period Grade in Math\", y = \"Final Grade in Math\", \n       title = \"Second Period vs Final Grade in Math by Family Size, Sex and Paid Classes\",\n       color = \"Paid Classes\")"
  }
]