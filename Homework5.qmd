---
title: "Homework 5"
format: html
editor: visual
---

## Summarizing Student Data

```{r}
# Load libraries
library(tidyverse)
```

### Task 1: Read in the Data and Modify

Modify the code provided to read in the data from a local file source and combine the two data frames. Use local paths as they do in their code.

```{r}
# Code provided
d1=read.table("student+performance/student/student-mat.csv",sep=";",header=TRUE)
d2=read.table("student+performance/student/student-por.csv",sep=";",header=TRUE)

d3=merge(d1,d2,by=c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet"))
print(nrow(d3)) # 382 students
```

Read in and combine the data using functions from the tidyverse. Use an inner_join() on the variables they used in their code. Do you notice any issues? Make a note of the issue.

```{r}
# Load the data
math_data <- read_csv2("student+performance/student/student-mat.csv", 
                       col_names=TRUE)
portuguese_data <- read_csv2("student+performance/student/student-por.csv",
                             col_names=TRUE)

# inner join
combined_data <- inner_join(math_data, portuguese_data, 
                            by = c("school","sex","age","address",
                                   "famsize","Pstatus","Medu","Fedu",
                                   "Mjob","Fjob","reason","nursery","internet"))

full_data
```

There appears to be an unexpected many-to-many relationship between 'x' and 'y'. Row 79 of 'x' matches multiple rows in 'y', and vice versa.

User an inner_join() on all variables other than G1, G2, G3, paid, and absences. Use this form of the combined data in further exercises.

```{r}
# inner join
combined_data <- inner_join(math_data, portuguese_data, 
                            by = c("school","sex","age","address",
                                   "famsize","Pstatus","Medu","Fedu",
                                   "Mjob","Fjob","reason",
                                   "guardian", "traveltime","studytime","failures",
                                   "schoolsup", "famsup", "activities", "nursery",
                                   "higher", "internet", "romantic", "famrel",
                                   "freetime", "goout", "Dalc", "Walc", "health"))

combined_data
```

Next, for the math data, Portuguese, and combined data, choose four categorical variables you are interested in and convert those into factor variables in each tibble (use the same four in each). Use the mutate() function to accomplish this.

```{r}
math_data <- math_data |>
  mutate(school = as.factor(school),
         sex = as.factor(sex),
         internet = as.factor(internet),
         activities = as.factor(activities))

portuguese_data <- portuguese_data |>
  mutate(school = as.factor(school),
         sex = as.factor(sex),
         internet = as.factor(internet),
         activities = as.factor(activities))

combined_data <- combined_data |>
  mutate(school = as.factor(school),
         sex = as.factor(sex),
         internet = as.factor(internet),
         activities = as.factor(activities))
```

### Task 2: Summarize the Data

Look at how the data is stored and see if everything makes sense.

```{r}
str(combined_data)
```

All of the variables look reasonable.

Document the missing values in the data.

```{r}
sum_na <- function(column) {
  sum(is.na(column))
}

combined_data |>
  summarize(across(everything(), sum_na))
```

Looks like there's no missing values in the data.

#### Categorical Variables

Create a one-way contingency table, a two-way contingency table, and a three-way contingency table for some of the factor variables you created previously. Use table() to accomplish this.

```{r}
# One-way contingency table
table(combined_data$school)
```

In this data set there are 33 students going to the Mousinho da Silveira school.

```{r}
# Two-way contingency table
table(combined_data$school, 
      combined_data$activities)
```

Of the students who go to Mousinho da Silveira school, 12 of them do extra curricular activities.

```{r}
# Three-way contingency table
table(combined_data$school,
      combined_data$activities,
      combined_data$internet)
```

Of the students who go to Mousinho da Silveira school and do extra curricular activities, only 1 of them doesn't have internet.

Create a conditional two-way table using table(). That is, condition on one variable's setting and create a two-way table. Do this using two different methods:

-   Once, by subsetting the data (say with filter()) and then creating the two-way table.

```{r}
# Conditional two-way table by subsetting data
subset_data <- combined_data |>
  filter(internet == 'yes') |>
  select(school, activities, internet)

table(subset_data$school, subset_data$activities)
```

-   Once, by creating a three-way table and subsetting it.

```{r}
three_way_contingency <- table(combined_data$school,
                              combined_data$activities,
                              combined_data$internet)

three_way_contingency[ , , "yes"]
```

Create a two-way contingency table using group_by() and summarize() from dplyr. Then use pivot_wider() to make the result look more like the output from table().

```{r}
combined_data |>
  group_by(school, activities) |>
  summarize(count = n()) |>
  pivot_wider(names_from = activities, values_from = count)
```

Create a stacked bar graph and a side-by-side bar graph. Give relevant x and y labels, and a title for the plots.

```{r}
# Stacked bar graph
ggplot(combined_data, aes(x = school, fill = activities)) + 
  geom_bar() +
  labs(x = "School", y = "Count",
       title = "Extra-Curricular Involvement by School") +
  scale_fill_discrete("Activities")
```

```{r}
# Side-by-side bar graph
ggplot(combined_data, aes(x = school, fill = activities)) +
  geom_bar(position = "dodge") +
  labs(x = "School", y = "Count", 
       title = "Extra-Curricular Involvement by School") +
  scale_fill_discrete("Activities")
```

#### Numeric Variables (and across groups)

The numeric variables are age, absences, and the three test grades variables (G1, G2, G3) from each data set.

Find measures of center and spread for three of these variables (including at least one G3 variable).

```{r}
combined_data |>
  summarize(across(c("age", "absences.x", "G3.x"), list("mean" = mean,
                                                        "median" = median,
                                                        "sd" = sd,
                                                        "IQR" = IQR),
                   .names = "{.col}_{.fn}"))
```

Repeat while subsetting the data in a meaningful way.

```{r}
combined_data |>
  filter(health >= 2) |>
  summarize(across(c("age", "absences.x", "G3.x"), list("mean" = mean,
                                                        "median" = median,
                                                        "sd" = sd,
                                                        "IQR" = IQR),
                   .names = "{.col}_{.fn}"))
```

Find measures of center and spread across a single grouping variable for three of these variables (including a G3 variable as one of them).

```{r}
combined_data |>
  group_by(sex) |>
  summarize(across(c("age", "absences.y", "G3.y"), list("mean" = mean,
                                                        "median" = median,
                                                        "sd" = sd,
                                                        "IQR" = IQR),
                   .names = "{.col}_{.fn}"))
```

Find measures of center and spread across two grouping variables for three of these variables (including a G3 variable as one of them).

```{r}
combined_data |>
  group_by(sex, guardian) |>
  summarize(across(c("G1.x", "G2.x", "G3.x"), list("mean" = mean,
                                                   "median" = median,
                                                   "sd" = sd,
                                                   "IQR" = IQR),
                   .names = "{.col}_{.fn}"))
```

Create a correlation matrix between all of the numeric variables.

```{r}
combined_data |>
  select(age, absences.x, absences.y, G1.x, G1.y, G2.x, G2.y, G3.x, G3.y) |>
  cor()
```

Create a histogram, kernel density plot, and boxplot for two of the numeric variables across one of the categorical variables. Add appropriate labels and titles.

```{r}
ggplot(combined_data, aes(x = G3.y)) +
  geom_histogram(binwidth = 1, aes(fill = famsize))
```

```{r}
ggplot(combined_data, aes(x = G3.y)) +
  geom_density(kernel = "gaussian", alpha = 0.5, aes(fill = famsize))
```

```{r}
ggplot(combined_data) +
  geom_boxplot(aes(x = famsize, y = G3.y, fill = famsize))
```

```{r}
ggplot(combined_data, aes(x = absences.y)) +
  geom_histogram(binwidth = 1, aes(fill = famsize))
```

```{r}
ggplot(combined_data, aes(x = absences.y)) +
  geom_density(kernel = "gaussian", alpha = 0.5, aes(fill = famsize))
```

```{r}
ggplot(combined_data) +
  geom_boxplot(aes(x = famsize, y = absences.y, fill = famsize))
```
